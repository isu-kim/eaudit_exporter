#!/bin/bash

#******************************************************************************
# Copyright 2022-23 Hanke Kimm and Secure Systems Lab, Stony Brook University
#******************************************************************************
# This file is part of eAudit. This specific script was used in part to produce
# the results in Section 4.5 of the eAudit paper (IEEE S&P, 2024).
#
# eAudit is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# eAudit is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# eAudit. If not, see <https://www.gnu.org/licenses/>.
#****************************************************************************

#run the benchmark and get the pid

#singlecore

cd ../

#fbm
#./run_find 1 96 & t=$!
#sleep 10

#tbm
#./run_tar 1 96 & t=$!
#sleep 10

#rdwr
./run_rdwr 1 10000000 & t=$!
sleep 10

#shbm
#./run_shbm 1 80000 & t=$!
#sleep 10

#htbench
#./run_httperf 1 3000 & t=$!
#sleep 10

#multicore

#fbm
#./fbm2 12 96 & t=$!
#sleep 10

#tbm
#./tbm2 12 8 & t=$!
#sleep 10

#rdwr
#./wrbomb 40000000 1 12 & t=$!
#sleep 10

#shbm
#./shbm 80000 12 & t=$!
#sleep 10

#postmark
#cd postmark
#./runpm pm-config.reg 12 & t=$!
#sleep 10

#lkb
#cd linux-kernel-build
#make mrproper
#make defconfig
#make -j12 & t=$!
#sleep 15

#htbench
#./run_httperf 12 1200 150 & t=$!
#sleep 10


#find the child processes of the benchmark and kill them.
#pgrep -P $t | xargs -I {} sh -c 'kill -15 {}'
rkill -15 $t

#Get the byte count of the log file at kill time
buf_st=`wc --bytes /var/tmp/sysdig.cap | awk '{print $1}'`

echo $buf_st

#Sleep for a few more seconds to let the log file finish
sleep 5

head -c $buf_st /var/tmp/sysdig.cap > /var/tmp/sysdig_part.cap

main_file_sz=`stat --printf="%s" /var/tmp/sysdig.cap`
part_file_sz=`stat --printf="%s" /var/tmp/sysdig_part.cap`
buf_ratio=`echo "scale=8; 1 - (($part_file_sz) / ($main_file_sz))" | bc`

echo "***buffer ratio=$buf_ratio***"
